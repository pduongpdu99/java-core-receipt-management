/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.pj.bienlai;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pduon
 */
public class MyProjectSW extends javax.swing.JFrame {

    private final LinkedList<BienLai> bienLais = new LinkedList<>();
    private final LinkedList<KhachHang> khachHangs = new LinkedList<>();
    private final LinkedList<Object[]> objs = new LinkedList<>();

    private int rowIndex = -1;
    private int colIndex = -1;

    private final String p1 = "src\\main\\java\\com\\pj\\bienlai\\BienLai.txt";
    private final String p2 = "src\\main\\java\\com\\pj\\bienlai\\KhachHang.txt";

    /**
     * Creates new form MyProjectSW
     */
    public MyProjectSW() {
        initComponents();
        this.dataLoad("src\\main\\java\\com\\pj\\bienlai\\BienLai.txt", "src\\main\\java\\com\\pj\\bienlai\\KhachHang.txt");
    }

    private boolean isSizeInvalid(String x) {
        return x.length() == 0;
    }

    private void dataLoad(String p1, String p2) {
        try {
            File f1 = new File(p1);
            File f2 = new File(p2);

            if (!f1.exists()) {
                f1.createNewFile();
            }
            if (!f2.exists()) {
                f2.createNewFile();
            }

            BufferedReader br;
            br = new BufferedReader(new InputStreamReader(new FileInputStream(p1), "UTF-8"));

            String line;
            while ((line = br.readLine()) != null) {
                String[] items = line.trim().split("\t\t");
                String hoTen = items[0];
                int cu = Integer.parseInt(items[1]);
                int moi = Integer.parseInt(items[2]);
                int phaiTra = Integer.parseInt(items[3]);
                bienLais.push(new BienLai(hoTen, cu, moi, phaiTra));
            }

            br = new BufferedReader(new InputStreamReader(new FileInputStream(p2), "UTF-8"));
            while ((line = br.readLine()) != null) {
                String[] items = line.trim().split("\t\t");
                String hoTen = items[0];
                int soNha = Integer.parseInt(items[1]);
                int ma = Integer.parseInt(items[2]);
                khachHangs.push(new KhachHang(hoTen, soNha, ma));
            }

            DefaultTableModel model = (DefaultTableModel) this.jTable1.getModel();
            for (KhachHang kh : khachHangs) {
                Object[] obj = new Object[]{kh.getHoTen(), kh.getSoNha(), kh.getMaCongToDien(), 0, 0, 0};
                boolean isExist = false;
                for (int i = 0; i < this.jTable1.getModel().getRowCount(); i++) {
                    String value = (String) this.jTable1.getModel().getValueAt(i, 0);
                    if (kh.getHoTen().equals(value)) {
                        isExist = true;
                    }
                }

                for (BienLai bl : bienLais) {
                    if (kh.getHoTen().equals(bl.getThongTinHo()) && !isExist) {
                        obj[3] = String.valueOf(bl.getSoCu());
                        obj[4] = String.valueOf(bl.getSoMoi());
                        obj[5] = String.valueOf(bl.getPhaiTra());
                        model.addRow(obj);
                        objs.add(obj);
                    }
                }
            }
        } catch (FileNotFoundException e) {
            Logger.getLogger(MyProjectSW.class.getName()).log(Level.SEVERE, null, e);
        } catch (IOException e) {
            Logger.getLogger(MyProjectSW.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "Họ tên",
                "Số nhà",
                "Mã công tơ điện",
                "Số điện cũ",
                "Số điện mới",
                "Tổng tiền"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable1MousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CHƯƠNG TRÌNH QUẢN LÝ BIÊN LAI ĐIỆN");
        jLabel1.setBorder(javax.swing.BorderFactory.createCompoundBorder());

        jLabel2.setText("Họ tên");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel3.setText("Xây dựng bởi Phạm Xuân Hiếu");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jLabel4.setText("Số nhà");

        jTextField3.setToolTipText("");

        jLabel5.setText("Công tơ");

        jLabel6.setText("Số mới");

        jLabel7.setText("Số cũ");

        jButton1.setText("Thêm");
        jButton1.setToolTipText("");
        jButton1.setActionCommand("doAdd");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Sửa");
        jButton2.setToolTipText("");
        jButton2.setActionCommand("doAdd");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Xóa");
        jButton3.setToolTipText("");
        jButton3.setActionCommand("doAdd");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Hủy");
        jButton4.setToolTipText("");
        jButton4.setActionCommand("doAdd");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                                    .addComponent(jTextField1)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                                        .addComponent(jTextField5)
                                        .addComponent(jTextField4))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(215, 215, 215))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            String hoTen = this.jTextField1.getText();
            String soNha = this.jTextField2.getText();
            String maCongTo = this.jTextField3.getText();
            String soCu = this.jTextField5.getText();
            String soMoi = this.jTextField4.getText();

            if (isSizeInvalid(hoTen)) {
                throw new IOException("Ho va ten size invalid");
            }
            if (isSizeInvalid(soNha)) {
                throw new IOException("So nha size invalid");
            }
            if (isSizeInvalid(maCongTo)) {
                throw new IOException("Ma cong to dien size invalid");
            }
            if (isSizeInvalid(soCu)) {
                throw new IOException("So cu size invalid");
            }
            if (isSizeInvalid(soMoi)) {
                throw new IOException("So moi size invalid");
            }

            int soCuI = Integer.parseInt(soCu);
            int soMoiI = Integer.parseInt(soMoi);
            int soNhaI = Integer.parseInt(soNha);
            int maI = Integer.parseInt(maCongTo);
            int phaiTra = (soMoiI - soCuI) * 5;

            
            DefaultTableModel model = (DefaultTableModel) this.jTable1.getModel();
            model.addRow(new Object[]{hoTen, soNhaI, maI, soCu, soMoi, phaiTra});
            objs.add(new Object[] {hoTen, soNha, maCongTo, soCu, soMoi, String.valueOf(phaiTra)});
            BienLai.saveList(p1, objs);
            KhachHang.saveList(p2, objs);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.toString(),"Lỗi", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(MyProjectSW.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            if (rowIndex == -1) {
                throw new IOException("Chưa chọn phần tử để cập nhật");
            }

            
            String hoTen = this.jTextField1.getText();
            String soNha = this.jTextField2.getText();
            String maCongTo = this.jTextField3.getText();
            String soCu = this.jTextField5.getText();
            String soMoi = this.jTextField4.getText();

            if (isSizeInvalid(hoTen)) {
                throw new IOException("Ho va ten size invalid");
            }
            if (isSizeInvalid(soNha)) {
                throw new IOException("So nha size invalid");
            }
            if (isSizeInvalid(maCongTo)) {
                throw new IOException("Ma cong to dien size invalid");
            }
            if (isSizeInvalid(soCu)) {
                throw new IOException("So cu size invalid");
            }
            if (isSizeInvalid(soMoi)) {
                throw new IOException("So moi size invalid");
            }
            
            Object[] obj = objs.get(rowIndex);
            obj[0] = hoTen;
            obj[1] = soNha;
            obj[2] = maCongTo;
            obj[3] = soCu;
            obj[4] = soMoi;
            obj[5] = String.valueOf((Integer.parseInt(soMoi) - Integer.parseInt(soCu)) * 5);
            objs.set(rowIndex, obj);
            this.jTable1.setValueAt(hoTen, rowIndex, 0);
            this.jTable1.setValueAt(soNha, rowIndex, 1);
            this.jTable1.setValueAt(maCongTo, rowIndex, 2);
            this.jTable1.setValueAt(soCu, rowIndex, 3);
            this.jTable1.setValueAt(soMoi, rowIndex, 4);
            this.jTable1.setValueAt(obj[5].toString(), rowIndex, 5);

            BienLai.saveList(p1, objs);
            KhachHang.saveList(p2, objs);

        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.toString(),"Lỗi", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(MyProjectSW.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            if (rowIndex == -1) {
                throw new IOException("Chưa chọn phần tử để xóa");
            }
            
            objs.remove(rowIndex);
            ((DefaultTableModel) this.jTable1.getModel()).removeRow(rowIndex);


            BienLai.saveList(p1, objs);
            KhachHang.saveList(p2, objs);

        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.toString(),"Lỗi", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(MyProjectSW.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.jTextField1.setText("");
        this.jTextField2.setText("");
        this.jTextField3.setText("");
        this.jTextField4.setText("");
        this.jTextField5.setText("");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed
        this.rowIndex = this.jTable1.getSelectedRow();
        this.jTextField1.setText(this.jTable1.getValueAt(rowIndex, 0).toString());
        this.jTextField2.setText(this.jTable1.getValueAt(rowIndex, 1).toString());
        this.jTextField3.setText(this.jTable1.getValueAt(rowIndex, 2).toString());
        this.jTextField5.setText(this.jTable1.getValueAt(rowIndex, 3).toString());
        this.jTextField4.setText(this.jTable1.getValueAt(rowIndex, 4).toString());
    }//GEN-LAST:event_jTable1MousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyProjectSW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyProjectSW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyProjectSW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyProjectSW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MyProjectSW().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables
}
